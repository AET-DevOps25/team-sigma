apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
data:
  create-multiple-databases.sh: |
    #!/bin/bash
    set -e

    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
        -- Create databases for services that need persistent storage
        CREATE DATABASE lecture_db;
        CREATE DATABASE document_db;
        
        -- Grant privileges to the default user
        GRANT ALL PRIVILEGES ON DATABASE lecture_db TO $POSTGRES_USER;
        GRANT ALL PRIVILEGES ON DATABASE document_db TO $POSTGRES_USER;
    EOSQL

    echo "Multiple databases created successfully!"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning-dashboards
data:
  dashboard.yml: |
    apiVersion: 1

    providers:
      - name: 'default'
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning-datasources
data:
  datasource.yml: |
    apiVersion: 1

    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        uid: dersgbccgre2oa
        isDefault: true
        editable: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
data:
  health.json: |
{{ .Files.Get "dashboards/health.json" | nindent 4 }}
  http_requests.json: |
{{ .Files.Get "dashboards/http_requests.json" | nindent 4 }}
  ai_usage.json: |
{{ .Files.Get "dashboards/ai_usage.json" | nindent 4 }}
  exceptions.json: |
{{ .Files.Get "dashboards/exceptions.json" | nindent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
{{ .Files.Get "prometheus/prometheus.yml" | nindent 4 }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
data:
  exception_rules.yml: |
{{ .Files.Get "prometheus/exception_rules.yml" | nindent 4 }}
